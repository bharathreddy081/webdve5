"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = refetchElement;

require("source-map-support/register");

/**
 * helper utility to refetch an element and all its parent elements when running
 * into stale element exception errors
 * @param  {Object}  currentElement  element to refetch
 * @return {Promise}                 resolves with element after all its parent were refetched
 */
async function refetchElement(currentElement) {
  let selectors = []; //Crawl back to the browser object, and cache all selectors

  while (currentElement.elementId && currentElement.parent) {
    selectors.push(currentElement.selector);
    currentElement = currentElement.parent;
  }

  selectors.reverse(); // Beginning with the browser object, rechain

  return selectors.reduce(async (elementPromise, selector) => {
    const resolvedElement = await elementPromise;
    return resolvedElement.$(selector);
  }, Promise.resolve(currentElement));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9yZWZldGNoRWxlbWVudC5qcyJdLCJuYW1lcyI6WyJyZWZldGNoRWxlbWVudCIsImN1cnJlbnRFbGVtZW50Iiwic2VsZWN0b3JzIiwiZWxlbWVudElkIiwicGFyZW50IiwicHVzaCIsInNlbGVjdG9yIiwicmV2ZXJzZSIsInJlZHVjZSIsImVsZW1lbnRQcm9taXNlIiwicmVzb2x2ZWRFbGVtZW50IiwiJCIsIlByb21pc2UiLCJyZXNvbHZlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7Ozs7O0FBTWUsZUFBZUEsY0FBZixDQUErQkMsY0FBL0IsRUFBK0M7QUFDMUQsTUFBSUMsU0FBUyxHQUFHLEVBQWhCLENBRDBELENBRzFEOztBQUNBLFNBQU1ELGNBQWMsQ0FBQ0UsU0FBZixJQUE0QkYsY0FBYyxDQUFDRyxNQUFqRCxFQUF5RDtBQUNyREYsSUFBQUEsU0FBUyxDQUFDRyxJQUFWLENBQWVKLGNBQWMsQ0FBQ0ssUUFBOUI7QUFDQUwsSUFBQUEsY0FBYyxHQUFHQSxjQUFjLENBQUNHLE1BQWhDO0FBQ0g7O0FBQ0RGLEVBQUFBLFNBQVMsQ0FBQ0ssT0FBVixHQVIwRCxDQVUxRDs7QUFDQSxTQUFPTCxTQUFTLENBQUNNLE1BQVYsQ0FBaUIsT0FBT0MsY0FBUCxFQUF1QkgsUUFBdkIsS0FBb0M7QUFDeEQsVUFBTUksZUFBZSxHQUFHLE1BQU1ELGNBQTlCO0FBQ0EsV0FBT0MsZUFBZSxDQUFDQyxDQUFoQixDQUFrQkwsUUFBbEIsQ0FBUDtBQUNILEdBSE0sRUFHSk0sT0FBTyxDQUFDQyxPQUFSLENBQWdCWixjQUFoQixDQUhJLENBQVA7QUFJSCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogaGVscGVyIHV0aWxpdHkgdG8gcmVmZXRjaCBhbiBlbGVtZW50IGFuZCBhbGwgaXRzIHBhcmVudCBlbGVtZW50cyB3aGVuIHJ1bm5pbmdcbiAqIGludG8gc3RhbGUgZWxlbWVudCBleGNlcHRpb24gZXJyb3JzXG4gKiBAcGFyYW0gIHtPYmplY3R9ICBjdXJyZW50RWxlbWVudCAgZWxlbWVudCB0byByZWZldGNoXG4gKiBAcmV0dXJuIHtQcm9taXNlfSAgICAgICAgICAgICAgICAgcmVzb2x2ZXMgd2l0aCBlbGVtZW50IGFmdGVyIGFsbCBpdHMgcGFyZW50IHdlcmUgcmVmZXRjaGVkXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIHJlZmV0Y2hFbGVtZW50IChjdXJyZW50RWxlbWVudCkge1xuICAgIGxldCBzZWxlY3RvcnMgPSBbXVxuXG4gICAgLy9DcmF3bCBiYWNrIHRvIHRoZSBicm93c2VyIG9iamVjdCwgYW5kIGNhY2hlIGFsbCBzZWxlY3RvcnNcbiAgICB3aGlsZShjdXJyZW50RWxlbWVudC5lbGVtZW50SWQgJiYgY3VycmVudEVsZW1lbnQucGFyZW50KSB7XG4gICAgICAgIHNlbGVjdG9ycy5wdXNoKGN1cnJlbnRFbGVtZW50LnNlbGVjdG9yKVxuICAgICAgICBjdXJyZW50RWxlbWVudCA9IGN1cnJlbnRFbGVtZW50LnBhcmVudFxuICAgIH1cbiAgICBzZWxlY3RvcnMucmV2ZXJzZSgpXG5cbiAgICAvLyBCZWdpbm5pbmcgd2l0aCB0aGUgYnJvd3NlciBvYmplY3QsIHJlY2hhaW5cbiAgICByZXR1cm4gc2VsZWN0b3JzLnJlZHVjZShhc3luYyAoZWxlbWVudFByb21pc2UsIHNlbGVjdG9yKSA9PiB7XG4gICAgICAgIGNvbnN0IHJlc29sdmVkRWxlbWVudCA9IGF3YWl0IGVsZW1lbnRQcm9taXNlXG4gICAgICAgIHJldHVybiByZXNvbHZlZEVsZW1lbnQuJChzZWxlY3RvcilcbiAgICB9LCBQcm9taXNlLnJlc29sdmUoY3VycmVudEVsZW1lbnQpKVxufVxuIl19